buildscript {
    ext {
        springBootVersion = '2.4.1'
    }
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE")
        classpath("com.epages:restdocs-api-spec-gradle-plugin:0.10.0")
    }
}

subprojects {

    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'
    apply plugin: 'com.epages.restdocs-api-spec'

    group = 'com.multimodule'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '11'

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-hateoas'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'mysql:mysql-connector-java:8.0.29'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        compile 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

//Security
//        implementation 'org.springframework.boot:spring-boot-starter-security'
//        testImplementation 'org.springframework.security:spring-security-test'

// Test And RestDocs
        testCompile 'com.epages:restdocs-api-spec-mockmvc:0.9.9'
        testCompile 'pl.pragmatists:JUnitParams:1.1.1'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude module: 'junit'
        }
    }
}

project(':core') {
    dependencies {
//for Slack Logback
        compile 'net.gpedro.integrations.slack:slack-webhook:1.4.0'
        implementation 'org.apache.commons:commons-text:1.8'
        compile 'eu.bitwalker:UserAgentUtils:1.21'

//for JWt Auth
//        compile 'io.jsonwebtoken:jjwt-api:0.11.2'
//        runtime 'io.jsonwebtoken:jjwt-impl:0.11.2',
//                'io.jsonwebtoken:jjwt-jackson:0.11.2'
    }
}

project(':api-admin') {
    dependencies {
        compile project(':domain-users')
    }
    openapi3 {
        
        mkdir("${sourceSets.main.output.resourcesDir}/static/docs")
        server = 'http://localhost:8080'
        title = 'My API'
        description = 'My API description'
        //tagDescriptionsPropertiesFile = 'src/docs/tag-descriptions.yaml'
        version = '0.1.0'
        format = 'json'
        outputDirectory = "${sourceSets.main.output.resourcesDir}/static/docs"
    }

    test {
        useJUnitPlatform()
    }
}

project(':api-main') {
    dependencies {
        compile project(':domain-users')
    }
}


project(':domain-users') {
    dependencies {
        compile project(':core')
    }
}